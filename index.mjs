// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-cdf@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var y=h.isPrimitive,x=f.isPrimitive,T=c,E=j.isPrimitive,V=v,O=u,k=a;var P=function(e,t){if(!T(t))return new TypeError(k("invalid argument. Options argument must be an object. Value: `%s`.",t));if(O(t,"alpha")){if(e.alpha=t.alpha,!x(e.alpha)||V(e.alpha))return new TypeError(k("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha));if(!y(e.alpha))return new RangeError(k("invalid option. `%s` option must be a number in the range 0 to 1. Option: `%f`.","alpha",e.alpha))}return O(t,"alternative")&&(e.alternative=t.alternative,!E(e.alternative))?new TypeError(k("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):O(t,"difference")&&(e.difference=t.difference,!x(e.difference)||V(e.difference))?new TypeError(k("invalid option. `%s` option must be a number. Option: `%s`.","difference",e.difference)):null},q=b,F=c,R=g.isPrimitive,z=u,A=w,D=a;var I=function(e){var t,i,s;if(i=4,t=!0,arguments.length>0){if(!F(e))throw new TypeError(D("invalid argument. First argument must be an options object. Value: `%s`.",e));if(z(e,"digits")){if(!q(e.digits))throw new TypeError(D("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(z(e,"decision")){if(!R(e.decision))throw new TypeError(D("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(s="",s+=this.method,s+="\n\n",s+="Alternative hypothesis: ",s+="True difference in means is ",this.alternative){case"less":s+="less than ";break;case"greater":s+="greater than ";break;default:s+="not equal to "}return s+=this.nullValue,s+="\n\n",s+="    pValue: "+A(this.pValue,-i)+"\n",s+="    statistic: "+A(this.statistic,-i)+"\n",s+="    "+100*(1-this.alpha)+"% confidence interval: ["+A(this.ci[0],-i)+","+A(this.ci[1],-i)+"]",s+="\n\n",t&&(s+="Test Decision: ",this.rejected?s+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":s+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",s+="\n"),s},S=e.primitives,B=t,C=i.isPrimitive,G=s,H=r.factory,J=n.factory,K=a,L=o,M=d,N=m,Q=l,U=p,W=P,X=I,Y=H(0,1),Z=J(0,1);var $=function(e,t,i,s,r){var n,a,o,d,m,l,p,h,f,c,j,v,u,b;if(!B(e)&&!S(e))throw new TypeError(K("invalid argument. First argument `x` must be a numeric array. Value: `%s`.",e));if(!B(t)&&!S(t))throw new TypeError(K("invalid argument. Second argument `y` must be a numeric array. Value: `%s`.",t));if(!C(i))throw new TypeError(K("invalid argument. Third argument `sigmax` must be a positive number. Value: `%s`.",i));if(!C(s))throw new TypeError(K("invalid argument. Third argument `sigmay` must be a positive number. Value: `%s`.",s));if(p={},r&&(j=W(p,r)))throw j;switch(l=p.difference||0,a=void 0===p.alpha?.05:p.alpha,u=e.length,b=t.length,n=L(i*i/u+s*s/b),f=((o=N(u,e,1))-(d=N(b,t,1))-l)/n,c=p.alternative||"two-sided"){case"two-sided":h=2*Z(-M(f)),(m=[f-Y(1-a/2),f+Y(1-a/2)])[0]=l+m[0]*n,m[1]=l+m[1]*n;break;case"greater":h=1-Z(f),(m=[f-Y(1-a),U])[0]=l+m[0]*n;break;case"less":h=Z(f),(m=[Q,f+Y(1-a)])[1]=l+m[1]*n;break;default:throw new Error(K("Invalid option. `alternative` must be either `two-sided`, `less`, or `greater`. Value: `%s`.",c))}return G(v={},"rejected",h<=a),G(v,"alpha",a),G(v,"pValue",h),G(v,"statistic",f),G(v,"ci",m),G(v,"alternative",c),G(v,"method","Two-sample z-test"),G(v,"nullValue",l),G(v,"xmean",o),G(v,"ymean",d),G(v,"print",X),v};export{$ as default};
//# sourceMappingURL=index.mjs.map
